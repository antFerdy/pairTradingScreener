package controller;


import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.Iterator;
import java.util.List;

import javax.swing.JFrame;
import javax.swing.SwingUtilities;

import util.QuoteLoader;
import util.SpreadCounter;
import util.UtilHelper;
import view.App;
import view.MainFrame;
import model.DailyData;
import model.Portfolio;
import model.SpreadObject;
import model.Stock;

public class Controller {
	private static App inst;
	private static QuoteLoader loader;
	public static void main(String[] args) {
		loader = new QuoteLoader();
		
		SwingUtilities.invokeLater(new Runnable() {
			public void run() {
				inst = new App();
				inst.setLocationRelativeTo(null);
				inst.setVisible(true);
			}
		});
	}
	
	
	
	public static void setDateParams() {
		//Подгружаем данные и заливаем их в нужные сущности
		
		loader.setStartMonth(String.valueOf(inst.getStartMonthIndex()));
		loader.setStartDay(inst.getStartDay());
		loader.setStartYear(inst.getStartYear());
		loader.setEndMonth(String.valueOf(inst.getEndMonth()));
		loader.setEndDay(inst.getEndDay());
		loader.setEndYear(inst.getEndYear());
	}
	
	
	
	public static void getQuotes(String [] tickers) {
		for(String ticker : tickers) {
			loader.loadQuotes(ticker);
		}
		
		Portfolio p = loader.getPortfolio();
		
		
		//Вызываем проверку дат и если не равна то получаем самую раннюю дату
//		Date earliestDate = loader.checkDates(p);
//		if(earliestDate != null) {
//			//Приравниваем даты если они не равны
//			for(Stock stock : p.getWatchList()) {
//				try {
//					UtilHelper.deleteOldData(stock, earliestDate);
//				} catch (ParseException e) {
//					System.out.println("Ошибка при конвертации дат. Попробуйте заново");
//				}
//			}
//		}
		
		
		//Вытаскиваем акцию и данные по ней, считаем для каждого дня приращение
		for(Stock item : p.getWatchList()) {
			UtilHelper.loadMath(item.getData());
		}
		
		//Считаем спред
		SpreadCounter spCounter = new SpreadCounter();
		List<SpreadObject> list = spCounter.loadSpread(p);
		
		
		System.out.println("I am done");
	}
	

}
  